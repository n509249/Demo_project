name: Create GitHub Repository

on:
  workflow_dispatch:
  push:
    branches: 
      - main
      - feature

jobs:
  create_repo_job:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Create GitHub repository
        run: |
          while IFS=' ' read -r project_name project_id; do
          token="${{ secrets.HUB_PERSONAL_ACCESS_TOKEN }}"
          PRIVATE_TOKEN="${{ secrets.GITLAB_TOKEN }}"
          response_code=$(curl -w "%{http_code}\n" -o response.json -X POST -H "Authorization: Bearer $token" -H "Accept: application/vnd.github.v3+json" -d '{"name": "'"$project_name"'", "private": false}' https://api.github.com/user/repos)
          response_code=$(curl -w "%{http_code}\n" -o response.json --request POST --header "PRIVATE-TOKEN:$PRIVATE_TOKEN" --header "Content-Type:application/json" --data '{"url":"https://n509249:'"$token"'@github.com/n509249/'"$project_name"'.git","enabled": true}'  https://gitlab.com/api/v4/projects/$project_id/remote_mirrors)
          response_code=$(curl -w "%{http_code}\n" -o response.json --request POST --header "PRIVATE-TOKEN: $PRIVATE_TOKEN" "https://gitlab.com/api/v4/projects/$project_id/repository/branches?branch=feature/migration&ref=master")
          response_body=$(jq '.' response.json)
                if [[ "$(echo "$response_code")" -ne 201 ]]; then
                  isError=true
                  echo "PROJECT ID:" $projectid
                  echo "ERROR CODE:" $response_code
                  echo "ERROR MESSAGE:" $response_body
                fi
          if [[ "$isError" = true ]]; then
                       exit 1
          fi
          done <project_name_url.txt

